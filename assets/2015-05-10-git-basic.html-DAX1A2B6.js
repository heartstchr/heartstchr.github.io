import{_ as l,j as s,o as r,k as o,b as e,G as t,p as i,L as n}from"./app-BEMlSNza.js";const c={},d=e("h3",{id:"step-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#step-1"},[e("span",null,[e("em",null,"Step 1"),t(" :")])])],-1),p={href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},h=n(`<h3 id="step-2" tabindex="-1"><a class="header-anchor" href="#step-2"><span><em>Step 2</em> :</span></a></h3><p>Create a repository(it is Basically, a folder which will contain and track your project)</p><h3 id="step-3" tabindex="-1"><a class="header-anchor" href="#step-3"><span><em>Step 3</em> :</span></a></h3><p>Create a folder in your local computer where you want to keep your project with the same name of repository in step2.</p><h3 id="step-4" tabindex="-1"><a class="header-anchor" href="#step-4"><span><em>Step 4</em> :</span></a></h3><p>Through Terminal Dive into the folder you just created then run this command</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git clone &lt;Repo Path&gt; .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It will copy and paste all the files or folder into your local system. where replace variable with<br><code>SSH clone URL or Http clone url</code><br> which you have to copy from<br><code>https://github.com/\\&lt;userName\\&gt;/\\&lt;repositoryName\\&gt;</code><br> bottom right of the page and dot signifies copy all files and folder of the repository in github to folder name same as repository in local system</p><h3 id="step-5" tabindex="-1"><a class="header-anchor" href="#step-5"><span><em>Step 5</em> :</span></a></h3>`,9),m={href:"http://README.md",target:"_blank",rel:"noopener noreferrer"},u=n(`<h3 id="step-6" tabindex="-1"><a class="header-anchor" href="#step-6"><span><em>Step 6</em> :</span></a></h3><p>Afer modifying any thingin in local folder named same as repository run</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git status 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It will show you the file which you have added, deleted, modified</p><h3 id="step-7" tabindex="-1"><a class="header-anchor" href="#step-7"><span><em>Step 7</em> :</span></a></h3><p>This will add your local changes</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git add .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>wait wait.. you will not get any this in online github repository.</p><h3 id="step-8" tabindex="-1"><a class="header-anchor" href="#step-8"><span><em>Step 8</em> :</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git commit -m &#39;what ever message you want you can but it&#39;s beter to give what are the changes you made this may vary for different commit&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This command will commit all changes whit you just added in previous step.</p><h3 id="step-9" tabindex="-1"><a class="header-anchor" href="#step-9"><span><em>step 9</em> :</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git push -u origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This command will finally push all the changes you made in local to github repository where origin is master branch.And</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git push origin gh-pages
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>this command push all the changes you made in local to github repository where origin is gh-pages branch. A github repository can have <code>branch:master or branch:gh-pages</code>.Every time you run this command it will ask you user credential which you signed in with.<br> ###<em>Step 10</em> :<br> For one time user credential run $ <code>git remote set-url origin git@github.com:&lt;Username&gt;/&lt;Project&gt;.git</code></p><h3 id="step-11" tabindex="-1"><a class="header-anchor" href="#step-11"><span><em>step 11</em> :</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git pull origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This is actually fetch github repository and merge with local folder named as repository name . this will generate conflict if you haven&#39;t commited you local changes yet. To remove that conflict you can do manually or follow step 13 and step 14.</p><h3 id="step-12" tabindex="-1"><a class="header-anchor" href="#step-12"><span><em>Step 12</em> :</span></a></h3><p>To see the file which is having the conflict run in terminal</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ grep -nr &quot;&lt;&lt;&lt;&lt;&lt;&quot; *
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="step-13" tabindex="-1"><a class="header-anchor" href="#step-13"><span><em>Step 13</em> :</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git reset HEAD #Reset in history 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="step-14" tabindex="-1"><a class="header-anchor" href="#step-14"><span><em>Step 14</em> :</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ git stash #To remove local changes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,26);function g(v,b){const a=s("ExternalLinkIcon");return r(),o("div",null,[d,e("p",null,[t("Create an account in "),e("a",p,[t("Github"),i(a)])]),h,e("p",null,[t("Initially it will have three file .gitignore, LICENSE, "),e("a",m,[t("README.md"),i(a)]),t(" . Now, in this folder you can create, delete, modify your project.")]),u])}const x=l(c,[["render",g],["__file","2015-05-10-git-basic.html.vue"]]),f=JSON.parse('{"path":"/blog/article/technical/2015-05-10-git-basic.html","title":"Git Basic","lang":"en-US","frontmatter":{"title":"Git Basic","cover":"github-logo-text-horizontal.png","date":"2015-05-10T09:59:00.000Z","category":["Technical"],"description":"Step 1 : Create an account in Github Step 2 : Create a repository(it is Basically, a folder which will contain and track your project) Step 3 : Create a folder in your local com...","head":[["meta",{"property":"og:url","content":"https://heartstchr.github.io/blog/article/technical/2015-05-10-git-basic.html"}],["meta",{"property":"og:site_name","content":"Jiwan Ghosal"}],["meta",{"property":"og:title","content":"Git Basic"}],["meta",{"property":"og:description","content":"Step 1 : Create an account in Github Step 2 : Create a repository(it is Basically, a folder which will contain and track your project) Step 3 : Create a folder in your local com..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-12-14T17:51:59.000Z"}],["meta",{"property":"article:author","content":"Jiwan Ghosal"}],["meta",{"property":"article:published_time","content":"2015-05-10T09:59:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-14T17:51:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git Basic\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2015-05-10T09:59:00.000Z\\",\\"dateModified\\":\\"2022-12-14T17:51:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jiwan Ghosal\\",\\"url\\":\\"http://heartstchr.github.io/\\"}]}"]]},"headers":[{"level":3,"title":"Step 1 :","slug":"step-1","link":"#step-1","children":[]},{"level":3,"title":"Step 2 :","slug":"step-2","link":"#step-2","children":[]},{"level":3,"title":"Step 3 :","slug":"step-3","link":"#step-3","children":[]},{"level":3,"title":"Step 4 :","slug":"step-4","link":"#step-4","children":[]},{"level":3,"title":"Step 5 :","slug":"step-5","link":"#step-5","children":[]},{"level":3,"title":"Step 6 :","slug":"step-6","link":"#step-6","children":[]},{"level":3,"title":"Step 7 :","slug":"step-7","link":"#step-7","children":[]},{"level":3,"title":"Step 8 :","slug":"step-8","link":"#step-8","children":[]},{"level":3,"title":"step 9 :","slug":"step-9","link":"#step-9","children":[]},{"level":3,"title":"step 11 :","slug":"step-11","link":"#step-11","children":[]},{"level":3,"title":"Step 12 :","slug":"step-12","link":"#step-12","children":[]},{"level":3,"title":"Step 13 :","slug":"step-13","link":"#step-13","children":[]},{"level":3,"title":"Step 14 :","slug":"step-14","link":"#step-14","children":[]}],"git":{"createdTime":1671040067000,"updatedTime":1671040319000,"contributors":[{"name":"Jiwan ghosal","email":"jiwan.cse@gmail.com","commits":1}]},"readingTime":{"minutes":1.49,"words":446},"filePathRelative":"blog/article/technical/2015-05-10-git-basic.md","localizedDate":"May 10, 2015","excerpt":"<h3><em>Step 1</em> :</h3>\\n<p>Create an account in <a href=\\"https://github.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Github</a></p>\\n<h3><em>Step 2</em> :</h3>\\n<p>Create a repository(it is Basically, a folder which will contain and track your project)</p>\\n<h3><em>Step 3</em> :</h3>\\n<p>Create a folder in your local computer where you want to keep your project with the same name of repository in step2.</p>","autoDesc":true}');export{x as comp,f as data};
